{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/lit-html@2.7.4/node_modules/lit-html/src/directives/repeat.ts", "../../../../../node_modules/.pnpm/lit-html@2.7.4/node_modules/lit-html/src/directives/live.ts", "../../../../../node_modules/.pnpm/hotkeys-js@3.10.2/node_modules/hotkeys-js/dist/hotkeys.esm.js", "../../../../../src/ninja-keys.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ChildPart, noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\nimport {\n  insertPart,\n  getCommittedValue,\n  removePart,\n  setCommittedValue,\n  setChildPartValue,\n} from '../directive-helpers.js';\n\nexport type KeyFn<T> = (item: T, index: number) => unknown;\nexport type ItemTemplate<T> = (item: T, index: number) => unknown;\n\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list: unknown[], start: number, end: number) => {\n  const map = new Map<unknown, number>();\n  for (let i = start; i <= end; i++) {\n    map.set(list[i], i);\n  }\n  return map;\n};\n\nclass RepeatDirective extends Directive {\n  private _itemKeys?: unknown[];\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error('repeat() can only be used in text expressions');\n    }\n  }\n\n  private _getValuesAndKeys<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    let keyFn: KeyFn<T> | undefined;\n    if (template === undefined) {\n      template = keyFnOrTemplate;\n    } else if (keyFnOrTemplate !== undefined) {\n      keyFn = keyFnOrTemplate as KeyFn<T>;\n    }\n    const keys = [];\n    const values = [];\n    let index = 0;\n    for (const item of items) {\n      keys[index] = keyFn ? keyFn(item, index) : index;\n      values[index] = template!(item, index);\n      index++;\n    }\n    return {\n      values,\n      keys,\n    };\n  }\n\n  render<T>(items: Iterable<T>, template: ItemTemplate<T>): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    return this._getValuesAndKeys(items, keyFnOrTemplate, template).values;\n  }\n\n  override update<T>(\n    containerPart: ChildPart,\n    [items, keyFnOrTemplate, template]: [\n      Iterable<T>,\n      KeyFn<T> | ItemTemplate<T>,\n      ItemTemplate<T>\n    ]\n  ) {\n    // Old part & key lists are retrieved from the last update (which may\n    // be primed by hydration)\n    const oldParts = getCommittedValue(\n      containerPart\n    ) as Array<ChildPart | null>;\n    const {values: newValues, keys: newKeys} = this._getValuesAndKeys(\n      items,\n      keyFnOrTemplate,\n      template\n    );\n\n    // We check that oldParts, the committed value, is an Array as an\n    // indicator that the previous value came from a repeat() call. If\n    // oldParts is not an Array then this is the first render and we return\n    // an array for lit-html's array handling to render, and remember the\n    // keys.\n    if (!Array.isArray(oldParts)) {\n      this._itemKeys = newKeys;\n      return newValues;\n    }\n\n    // In SSR hydration it's possible for oldParts to be an array but for us\n    // to not have item keys because the update() hasn't run yet. We set the\n    // keys to an empty array. This will cause all oldKey/newKey comparisons\n    // to fail and execution to fall to the last nested brach below which\n    // reuses the oldPart.\n    const oldKeys = (this._itemKeys ??= []);\n\n    // New part list will be built up as we go (either reused from\n    // old parts or created for new keys in this update). This is\n    // saved in the above cache at the end of the update.\n    const newParts: ChildPart[] = [];\n\n    // Maps from key to index for current and previous update; these\n    // are generated lazily only when needed as a performance\n    // optimization, since they are only required for multiple\n    // non-contiguous changes in the list, which are less common.\n    let newKeyToIndexMap!: Map<unknown, number>;\n    let oldKeyToIndexMap!: Map<unknown, number>;\n\n    // Head and tail pointers to old parts and new values\n    let oldHead = 0;\n    let oldTail = oldParts.length - 1;\n    let newHead = 0;\n    let newTail = newValues.length - 1;\n\n    // Overview of O(n) reconciliation algorithm (general approach\n    // based on ideas found in ivi, vue, snabbdom, etc.):\n    //\n    // * We start with the list of old parts and new values (and\n    //   arrays of their respective keys), head/tail pointers into\n    //   each, and we build up the new list of parts by updating\n    //   (and when needed, moving) old parts or creating new ones.\n    //   The initial scenario might look like this (for brevity of\n    //   the diagrams, the numbers in the array reflect keys\n    //   associated with the old parts or new values, although keys\n    //   and parts/values are actually stored in parallel arrays\n    //   indexed using the same head/tail pointers):\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n    //                                      item order\n    //      newHead ^                 ^ newTail\n    //\n    // * Iterate old & new lists from both sides, updating,\n    //   swapping, or removing parts at the head/tail locations\n    //   until neither head nor tail can move.\n    //\n    // * Example below: keys at head pointers match, so update old\n    //   part 0 in-place (no need to move it) and record part 0 in\n    //   the `newParts` list. The last thing we do is advance the\n    //   `oldHead` and `newHead` pointers (will be reflected in the\n    //   next diagram).\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //      newHead ^                 ^ newTail\n    //\n    // * Example below: head pointers don't match, but tail\n    //   pointers do, so update part 6 in place (no need to move\n    //   it), and record part 6 in the `newParts` list. Last,\n    //   advance the `oldTail` and `oldHead` pointers.\n    //\n    //         oldHead v              v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n    //                                      & newTail\n    //         newHead ^              ^ newTail\n    //\n    // * If neither head nor tail match; next check if one of the\n    //   old head/tail items was removed. We first need to generate\n    //   the reverse map of new keys to index (`newKeyToIndexMap`),\n    //   which is done once lazily as a performance optimization,\n    //   since we only hit this case if multiple non-contiguous\n    //   changes were made. Note that for contiguous removal\n    //   anywhere in the list, the head and tails would advance\n    //   from either end and pass each other before we get to this\n    //   case and removals would be handled in the final while loop\n    //   without needing to generate the map.\n    //\n    // * Example below: The key at `oldTail` was removed (no longer\n    //   in the `newKeyToIndexMap`), so remove that part from the\n    //   DOM and advance just the `oldTail` pointer.\n    //\n    //         oldHead v           v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n    //         newHead ^           ^ newTail\n    //\n    // * Once head and tail cannot move, any mismatches are due to\n    //   either new or moved items; if a new key is in the previous\n    //   \"old key to old index\" map, move the old part to the new\n    //   location, otherwise create and insert a new part. Note\n    //   that when moving an old part we null its position in the\n    //   oldParts array if it lies between the head and tail so we\n    //   know to skip it when the pointers get there.\n    //\n    // * Example below: neither head nor tail match, and neither\n    //   were removed; so find the `newHead` key in the\n    //   `oldKeyToIndexMap`, and move that old part's DOM into the\n    //   next head position (before `oldParts[oldHead]`). Last,\n    //   null the part in the `oldPart` array since it was\n    //   somewhere in the remaining oldParts still to be scanned\n    //   (between the head and tail pointers) so that we know to\n    //   skip that old part on future iterations.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n    //                                      newHead\n    //         newHead ^           ^ newTail\n    //\n    // * Note that for moves/insertions like the one above, a part\n    //   inserted at the head pointer is inserted before the\n    //   current `oldParts[oldHead]`, and a part inserted at the\n    //   tail pointer is inserted before `newParts[newTail+1]`. The\n    //   seeming asymmetry lies in the fact that new parts are\n    //   moved into place outside in, so to the right of the head\n    //   pointer are old parts, and to the right of the tail\n    //   pointer are new parts.\n    //\n    // * We always restart back from the top of the algorithm,\n    //   allowing matching and simple updates in place to\n    //   continue...\n    //\n    // * Example below: the head pointers once again match, so\n    //   simply update part 1 and record it in the `newParts`\n    //   array.  Last, advance both head pointers.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //            newHead ^        ^ newTail\n    //\n    // * As mentioned above, items that were moved as a result of\n    //   being stuck (the final else clause in the code below) are\n    //   marked with null, so we always advance old pointers over\n    //   these so we're comparing the next actual old value on\n    //   either end.\n    //\n    // * Example below: `oldHead` is null (already placed in\n    //   newParts), so advance `oldHead`.\n    //\n    //            oldHead v     v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n    //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //               newHead ^     ^ newTail\n    //\n    // * Note it's not critical to mark old parts as null when they\n    //   are moved from head to tail or tail to head, since they\n    //   will be outside the pointer range and never visited again.\n    //\n    // * Example below: Here the old tail key matches the new head\n    //   key, so the part at the `oldTail` position and move its\n    //   DOM to the new head position (before `oldParts[oldHead]`).\n    //   Last, advance `oldTail` and `newHead` pointers.\n    //\n    //               oldHead v  v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n    //                                     advance oldTail & newHead\n    //               newHead ^     ^ newTail\n    //\n    // * Example below: Old and new head keys match, so update the\n    //   old head part in place, and advance the `oldHead` and\n    //   `newHead` pointers.\n    //\n    //               oldHead v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n    //                                      newHead\n    //                  newHead ^  ^ newTail\n    //\n    // * Once the new or old pointers move past each other then all\n    //   we have left is additions (if old list exhausted) or\n    //   removals (if new list exhausted). Those are handled in the\n    //   final while loops at the end.\n    //\n    // * Example below: `oldHead` exceeded `oldTail`, so we're done\n    //   with the main loop.  Create the remaining part and insert\n    //   it at the new head position, and the update is complete.\n    //\n    //                   (oldHead > oldTail)\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //                     newHead ^ newTail\n    //\n    // * Note that the order of the if/else clauses is not\n    //   important to the algorithm, as long as the null checks\n    //   come first (to ensure we're always working on valid old\n    //   parts) and that the final else clause comes last (since\n    //   that's where the expensive moves occur). The order of\n    //   remaining clauses is is just a simple guess at which cases\n    //   will be most common.\n    //\n    // * Note, we could calculate the longest\n    //   increasing subsequence (LIS) of old items in new position,\n    //   and only move those not in the LIS set. However that costs\n    //   O(nlogn) time and adds a bit more code, and only helps\n    //   make rare types of mutations require fewer moves. The\n    //   above handles removes, adds, reversal, swaps, and single\n    //   moves of contiguous items in linear time, in the minimum\n    //   number of moves. As the number of multiple moves where LIS\n    //   might help approaches a random shuffle, the LIS\n    //   optimization becomes less helpful, so it seems not worth\n    //   the code at this point. Could reconsider if a compelling\n    //   case arises.\n\n    while (oldHead <= oldTail && newHead <= newTail) {\n      if (oldParts[oldHead] === null) {\n        // `null` means old part at head has already been used\n        // below; skip\n        oldHead++;\n      } else if (oldParts[oldTail] === null) {\n        // `null` means old part at tail has already been used\n        // below; skip\n        oldTail--;\n      } else if (oldKeys[oldHead] === newKeys[newHead]) {\n        // Old head matches new head; update in place\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newHead]\n        );\n        oldHead++;\n        newHead++;\n      } else if (oldKeys[oldTail] === newKeys[newTail]) {\n        // Old tail matches new tail; update in place\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newTail]\n        );\n        oldTail--;\n        newTail--;\n      } else if (oldKeys[oldHead] === newKeys[newTail]) {\n        // Old head matches new tail; update and move to new tail\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newTail]\n        );\n        insertPart(containerPart, newParts[newTail + 1], oldParts[oldHead]!);\n        oldHead++;\n        newTail--;\n      } else if (oldKeys[oldTail] === newKeys[newHead]) {\n        // Old tail matches new head; update and move to new head\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newHead]\n        );\n        insertPart(containerPart, oldParts[oldHead]!, oldParts[oldTail]!);\n        oldTail--;\n        newHead++;\n      } else {\n        if (newKeyToIndexMap === undefined) {\n          // Lazily generate key-to-index maps, used for removals &\n          // moves below\n          newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n          oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n        }\n        if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n          // Old head is no longer in new list; remove\n          removePart(oldParts[oldHead]!);\n          oldHead++;\n        } else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n          // Old tail is no longer in new list; remove\n          removePart(oldParts[oldTail]!);\n          oldTail--;\n        } else {\n          // Any mismatches at this point are due to additions or\n          // moves; see if we have an old part we can reuse and move\n          // into place\n          const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n          const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n          if (oldPart === null) {\n            // No old part for this value; create a new one and\n            // insert it\n            const newPart = insertPart(containerPart, oldParts[oldHead]!);\n            setChildPartValue(newPart, newValues[newHead]);\n            newParts[newHead] = newPart;\n          } else {\n            // Reuse old part\n            newParts[newHead] = setChildPartValue(oldPart, newValues[newHead]);\n            insertPart(containerPart, oldParts[oldHead]!, oldPart);\n            // This marks the old part as having been used, so that\n            // it will be skipped in the first two checks above\n            oldParts[oldIndex as number] = null;\n          }\n          newHead++;\n        }\n      }\n    }\n    // Add parts for any remaining new values\n    while (newHead <= newTail) {\n      // For all remaining additions, we insert before last new\n      // tail, since old pointers are no longer valid\n      const newPart = insertPart(containerPart, newParts[newTail + 1]);\n      setChildPartValue(newPart, newValues[newHead]);\n      newParts[newHead++] = newPart;\n    }\n    // Remove any remaining unused old parts\n    while (oldHead <= oldTail) {\n      const oldPart = oldParts[oldHead++];\n      if (oldPart !== null) {\n        removePart(oldPart);\n      }\n    }\n\n    // Save order of new parts for next round\n    this._itemKeys = newKeys;\n    // Directly set part value, bypassing it's dirty-checking\n    setCommittedValue(containerPart, newParts);\n    return noChange;\n  }\n}\n\nexport interface RepeatDirectiveFn {\n  <T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ): unknown;\n  <T>(items: Iterable<T>, template: ItemTemplate<T>): unknown;\n  <T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): unknown;\n}\n\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * and removals.\n *\n * The `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n *\n * ```js\n * html`\n *   <ol>\n *     ${repeat(this.items, (item) => item.id, (item, index) => {\n *       return html`<li>${index}: ${item.name}</li>`;\n *     })}\n *   </ol>\n * `\n * ```\n *\n * **Important**: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive(RepeatDirective) as RepeatDirectiveFn;\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RepeatDirective};\n", "/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange, nothing} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\nimport {isSingleExpression, setCommittedValue} from '../directive-helpers.js';\n\nclass LiveDirective extends Directive {\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      !(\n        partInfo.type === PartType.PROPERTY ||\n        partInfo.type === PartType.ATTRIBUTE ||\n        partInfo.type === PartType.BOOLEAN_ATTRIBUTE\n      )\n    ) {\n      throw new Error(\n        'The `live` directive is not allowed on child or event bindings'\n      );\n    }\n    if (!isSingleExpression(partInfo)) {\n      throw new Error('`live` bindings can only contain a single expression');\n    }\n  }\n\n  render(value: unknown) {\n    return value;\n  }\n\n  override update(part: AttributePart, [value]: DirectiveParameters<this>) {\n    if (value === noChange || value === nothing) {\n      return value;\n    }\n    const element = part.element;\n    const name = part.name;\n\n    if (part.type === PartType.PROPERTY) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      if (value === (element as any)[name]) {\n        return noChange;\n      }\n    } else if (part.type === PartType.BOOLEAN_ATTRIBUTE) {\n      if (!!value === element.hasAttribute(name)) {\n        return noChange;\n      }\n    } else if (part.type === PartType.ATTRIBUTE) {\n      if (element.getAttribute(name) === String(value)) {\n        return noChange;\n      }\n    }\n    // Resets the part's value, causing its dirty-check to fail so that it\n    // always sets the value.\n    setCommittedValue(part);\n    return value;\n  }\n}\n\n/**\n * Checks binding values against live DOM values, instead of previously bound\n * values, when determining whether to update the value.\n *\n * This is useful for cases where the DOM value may change from outside of\n * lit-html, such as with a binding to an `<input>` element's `value` property,\n * a content editable elements text, or to a custom element that changes it's\n * own properties or attributes.\n *\n * In these cases if the DOM value changes, but the value set through lit-html\n * bindings hasn't, lit-html won't know to update the DOM value and will leave\n * it alone. If this is not what you want--if you want to overwrite the DOM\n * value with the bound value no matter what--use the `live()` directive:\n *\n * ```js\n * html`<input .value=${live(x)}>`\n * ```\n *\n * `live()` performs a strict equality check against the live DOM value, and if\n * the new value is equal to the live value, does nothing. This means that\n * `live()` should not be used when the binding will cause a type conversion. If\n * you use `live()` with an attribute binding, make sure that only strings are\n * passed in, or the binding will update every render.\n */\nexport const live = directive(LiveDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {LiveDirective};\n", "/**! \n * hotkeys-js v3.10.2 \n * A simple micro-library for defining and dispatching keyboard shortcuts. It has no dependencies. \n * \n * Copyright (c) 2023 kenny wong <wowohoo@qq.com> \n * http://jaywcjlove.github.io/hotkeys \n * Licensed under the MIT license \n */\n\nvar isff = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase().indexOf('firefox') > 0 : false; // \u7ED1\u5B9A\u4E8B\u4EF6\n\nfunction addEvent(object, event, method, useCapture) {\n  if (object.addEventListener) {\n    object.addEventListener(event, method, useCapture);\n  } else if (object.attachEvent) {\n    object.attachEvent(\"on\".concat(event), function () {\n      method(window.event);\n    });\n  }\n} // \u4FEE\u9970\u952E\u8F6C\u6362\u6210\u5BF9\u5E94\u7684\u952E\u7801\n\n\nfunction getMods(modifier, key) {\n  var mods = key.slice(0, key.length - 1);\n\n  for (var i = 0; i < mods.length; i++) {\n    mods[i] = modifier[mods[i].toLowerCase()];\n  }\n\n  return mods;\n} // \u5904\u7406\u4F20\u7684key\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u6570\u7EC4\n\n\nfunction getKeys(key) {\n  if (typeof key !== 'string') key = '';\n  key = key.replace(/\\s/g, ''); // \u5339\u914D\u4EFB\u4F55\u7A7A\u767D\u5B57\u7B26,\u5305\u62EC\u7A7A\u683C\u3001\u5236\u8868\u7B26\u3001\u6362\u9875\u7B26\u7B49\u7B49\n\n  var keys = key.split(','); // \u540C\u65F6\u8BBE\u7F6E\u591A\u4E2A\u5FEB\u6377\u952E\uFF0C\u4EE5','\u5206\u5272\n\n  var index = keys.lastIndexOf(''); // \u5FEB\u6377\u952E\u53EF\u80FD\u5305\u542B','\uFF0C\u9700\u7279\u6B8A\u5904\u7406\n\n  for (; index >= 0;) {\n    keys[index - 1] += ',';\n    keys.splice(index, 1);\n    index = keys.lastIndexOf('');\n  }\n\n  return keys;\n} // \u6BD4\u8F83\u4FEE\u9970\u952E\u7684\u6570\u7EC4\n\n\nfunction compareArray(a1, a2) {\n  var arr1 = a1.length >= a2.length ? a1 : a2;\n  var arr2 = a1.length >= a2.length ? a2 : a1;\n  var isIndex = true;\n\n  for (var i = 0; i < arr1.length; i++) {\n    if (arr2.indexOf(arr1[i]) === -1) isIndex = false;\n  }\n\n  return isIndex;\n}\n\nvar _keyMap = {\n  backspace: 8,\n  '\u232B': 8,\n  tab: 9,\n  clear: 12,\n  enter: 13,\n  '\u21A9': 13,\n  return: 13,\n  esc: 27,\n  escape: 27,\n  space: 32,\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40,\n  del: 46,\n  delete: 46,\n  ins: 45,\n  insert: 45,\n  home: 36,\n  end: 35,\n  pageup: 33,\n  pagedown: 34,\n  capslock: 20,\n  num_0: 96,\n  num_1: 97,\n  num_2: 98,\n  num_3: 99,\n  num_4: 100,\n  num_5: 101,\n  num_6: 102,\n  num_7: 103,\n  num_8: 104,\n  num_9: 105,\n  num_multiply: 106,\n  num_add: 107,\n  num_enter: 108,\n  num_subtract: 109,\n  num_decimal: 110,\n  num_divide: 111,\n  '\u21EA': 20,\n  ',': 188,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '-': isff ? 173 : 189,\n  '=': isff ? 61 : 187,\n  ';': isff ? 59 : 186,\n  '\\'': 222,\n  '[': 219,\n  ']': 221,\n  '\\\\': 220\n}; // Modifier Keys\n\nvar _modifier = {\n  // shiftKey\n  '\u21E7': 16,\n  shift: 16,\n  // altKey\n  '\u2325': 18,\n  alt: 18,\n  option: 18,\n  // ctrlKey\n  '\u2303': 17,\n  ctrl: 17,\n  control: 17,\n  // metaKey\n  '\u2318': 91,\n  cmd: 91,\n  command: 91\n};\nvar modifierMap = {\n  16: 'shiftKey',\n  18: 'altKey',\n  17: 'ctrlKey',\n  91: 'metaKey',\n  shiftKey: 16,\n  ctrlKey: 17,\n  altKey: 18,\n  metaKey: 91\n};\nvar _mods = {\n  16: false,\n  18: false,\n  17: false,\n  91: false\n};\nvar _handlers = {}; // F1~F12 special key\n\nfor (var k = 1; k < 20; k++) {\n  _keyMap[\"f\".concat(k)] = 111 + k;\n}\n\nvar _downKeys = []; // \u8BB0\u5F55\u6441\u4E0B\u7684\u7ED1\u5B9A\u952E\n\nvar winListendFocus = false; // window\u662F\u5426\u5DF2\u7ECF\u76D1\u542C\u4E86focus\u4E8B\u4EF6\n\nvar _scope = 'all'; // \u9ED8\u8BA4\u70ED\u952E\u8303\u56F4\n\nvar elementHasBindEvent = []; // \u5DF2\u7ED1\u5B9A\u4E8B\u4EF6\u7684\u8282\u70B9\u8BB0\u5F55\n// \u8FD4\u56DE\u952E\u7801\n\nvar code = function code(x) {\n  return _keyMap[x.toLowerCase()] || _modifier[x.toLowerCase()] || x.toUpperCase().charCodeAt(0);\n};\n\nvar getKey = function getKey(x) {\n  return Object.keys(_keyMap).find(function (k) {\n    return _keyMap[k] === x;\n  });\n};\n\nvar getModifier = function getModifier(x) {\n  return Object.keys(_modifier).find(function (k) {\n    return _modifier[k] === x;\n  });\n}; // \u8BBE\u7F6E\u83B7\u53D6\u5F53\u524D\u8303\u56F4\uFF08\u9ED8\u8BA4\u4E3A'\u6240\u6709'\uFF09\n\n\nfunction setScope(scope) {\n  _scope = scope || 'all';\n} // \u83B7\u53D6\u5F53\u524D\u8303\u56F4\n\n\nfunction getScope() {\n  return _scope || 'all';\n} // \u83B7\u53D6\u6441\u4E0B\u7ED1\u5B9A\u952E\u7684\u952E\u503C\n\n\nfunction getPressedKeyCodes() {\n  return _downKeys.slice(0);\n}\n\nfunction getPressedKeyString() {\n  return _downKeys.map(function (c) {\n    return getKey(c) || getModifier(c) || String.fromCharCode(c);\n  });\n} // \u8868\u5355\u63A7\u4EF6\u63A7\u4EF6\u5224\u65AD \u8FD4\u56DE Boolean\n// hotkey is effective only when filter return true\n\n\nfunction filter(event) {\n  var target = event.target || event.srcElement;\n  var tagName = target.tagName;\n  var flag = true; // ignore: isContentEditable === 'true', <input> and <textarea> when readOnly state is false, <select>\n\n  if (target.isContentEditable || (tagName === 'INPUT' || tagName === 'TEXTAREA' || tagName === 'SELECT') && !target.readOnly) {\n    flag = false;\n  }\n\n  return flag;\n} // \u5224\u65AD\u6441\u4E0B\u7684\u952E\u662F\u5426\u4E3A\u67D0\u4E2A\u952E\uFF0C\u8FD4\u56DEtrue\u6216\u8005false\n\n\nfunction isPressed(keyCode) {\n  if (typeof keyCode === 'string') {\n    keyCode = code(keyCode); // \u8F6C\u6362\u6210\u952E\u7801\n  }\n\n  return _downKeys.indexOf(keyCode) !== -1;\n} // \u5FAA\u73AF\u5220\u9664handlers\u4E2D\u7684\u6240\u6709 scope(\u8303\u56F4)\n\n\nfunction deleteScope(scope, newScope) {\n  var handlers;\n  var i; // \u6CA1\u6709\u6307\u5B9Ascope\uFF0C\u83B7\u53D6scope\n\n  if (!scope) scope = getScope();\n\n  for (var key in _handlers) {\n    if (Object.prototype.hasOwnProperty.call(_handlers, key)) {\n      handlers = _handlers[key];\n\n      for (i = 0; i < handlers.length;) {\n        if (handlers[i].scope === scope) handlers.splice(i, 1);else i++;\n      }\n    }\n  } // \u5982\u679Cscope\u88AB\u5220\u9664\uFF0C\u5C06scope\u91CD\u7F6E\u4E3Aall\n\n\n  if (getScope() === scope) setScope(newScope || 'all');\n} // \u6E05\u9664\u4FEE\u9970\u952E\n\n\nfunction clearModifier(event) {\n  var key = event.keyCode || event.which || event.charCode;\n\n  var i = _downKeys.indexOf(key); // \u4ECE\u5217\u8868\u4E2D\u6E05\u9664\u6309\u538B\u8FC7\u7684\u952E\n\n\n  if (i >= 0) {\n    _downKeys.splice(i, 1);\n  } // \u7279\u6B8A\u5904\u7406 cmmand \u952E\uFF0C\u5728 cmmand \u7EC4\u5408\u5FEB\u6377\u952E keyup \u53EA\u6267\u884C\u4E00\u6B21\u7684\u95EE\u9898\n\n\n  if (event.key && event.key.toLowerCase() === 'meta') {\n    _downKeys.splice(0, _downKeys.length);\n  } // \u4FEE\u9970\u952E shiftKey altKey ctrlKey (command||metaKey) \u6E05\u9664\n\n\n  if (key === 93 || key === 224) key = 91;\n\n  if (key in _mods) {\n    _mods[key] = false; // \u5C06\u4FEE\u9970\u952E\u91CD\u7F6E\u4E3Afalse\n\n    for (var k in _modifier) {\n      if (_modifier[k] === key) hotkeys[k] = false;\n    }\n  }\n}\n\nfunction unbind(keysInfo) {\n  // unbind(), unbind all keys\n  if (typeof keysInfo === 'undefined') {\n    Object.keys(_handlers).forEach(function (key) {\n      return delete _handlers[key];\n    });\n  } else if (Array.isArray(keysInfo)) {\n    // support like : unbind([{key: 'ctrl+a', scope: 's1'}, {key: 'ctrl-a', scope: 's2', splitKey: '-'}])\n    keysInfo.forEach(function (info) {\n      if (info.key) eachUnbind(info);\n    });\n  } else if (typeof keysInfo === 'object') {\n    // support like unbind({key: 'ctrl+a, ctrl+b', scope:'abc'})\n    if (keysInfo.key) eachUnbind(keysInfo);\n  } else if (typeof keysInfo === 'string') {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    // support old method\n    // eslint-disable-line\n    var scope = args[0],\n        method = args[1];\n\n    if (typeof scope === 'function') {\n      method = scope;\n      scope = '';\n    }\n\n    eachUnbind({\n      key: keysInfo,\n      scope: scope,\n      method: method,\n      splitKey: '+'\n    });\n  }\n} // \u89E3\u9664\u7ED1\u5B9A\u67D0\u4E2A\u8303\u56F4\u7684\u5FEB\u6377\u952E\n\n\nvar eachUnbind = function eachUnbind(_ref) {\n  var key = _ref.key,\n      scope = _ref.scope,\n      method = _ref.method,\n      _ref$splitKey = _ref.splitKey,\n      splitKey = _ref$splitKey === void 0 ? '+' : _ref$splitKey;\n  var multipleKeys = getKeys(key);\n  multipleKeys.forEach(function (originKey) {\n    var unbindKeys = originKey.split(splitKey);\n    var len = unbindKeys.length;\n    var lastKey = unbindKeys[len - 1];\n    var keyCode = lastKey === '*' ? '*' : code(lastKey);\n    if (!_handlers[keyCode]) return; // \u5224\u65AD\u662F\u5426\u4F20\u5165\u8303\u56F4\uFF0C\u6CA1\u6709\u5C31\u83B7\u53D6\u8303\u56F4\n\n    if (!scope) scope = getScope();\n    var mods = len > 1 ? getMods(_modifier, unbindKeys) : [];\n    _handlers[keyCode] = _handlers[keyCode].filter(function (record) {\n      // \u901A\u8FC7\u51FD\u6570\u5224\u65AD\uFF0C\u662F\u5426\u89E3\u9664\u7ED1\u5B9A\uFF0C\u51FD\u6570\u76F8\u7B49\u76F4\u63A5\u8FD4\u56DE\n      var isMatchingMethod = method ? record.method === method : true;\n      return !(isMatchingMethod && record.scope === scope && compareArray(record.mods, mods));\n    });\n  });\n}; // \u5BF9\u76D1\u542C\u5BF9\u5E94\u5FEB\u6377\u952E\u7684\u56DE\u8C03\u51FD\u6570\u8FDB\u884C\u5904\u7406\n\n\nfunction eventHandler(event, handler, scope, element) {\n  if (handler.element !== element) {\n    return;\n  }\n\n  var modifiersMatch; // \u770B\u5B83\u662F\u5426\u5728\u5F53\u524D\u8303\u56F4\n\n  if (handler.scope === scope || handler.scope === 'all') {\n    // \u68C0\u67E5\u662F\u5426\u5339\u914D\u4FEE\u9970\u7B26\uFF08\u5982\u679C\u6709\u8FD4\u56DEtrue\uFF09\n    modifiersMatch = handler.mods.length > 0;\n\n    for (var y in _mods) {\n      if (Object.prototype.hasOwnProperty.call(_mods, y)) {\n        if (!_mods[y] && handler.mods.indexOf(+y) > -1 || _mods[y] && handler.mods.indexOf(+y) === -1) {\n          modifiersMatch = false;\n        }\n      }\n    } // \u8C03\u7528\u5904\u7406\u7A0B\u5E8F\uFF0C\u5982\u679C\u662F\u4FEE\u9970\u952E\u4E0D\u505A\u5904\u7406\n\n\n    if (handler.mods.length === 0 && !_mods[16] && !_mods[18] && !_mods[17] && !_mods[91] || modifiersMatch || handler.shortcut === '*') {\n      if (handler.method(event, handler) === false) {\n        if (event.preventDefault) event.preventDefault();else event.returnValue = false;\n        if (event.stopPropagation) event.stopPropagation();\n        if (event.cancelBubble) event.cancelBubble = true;\n      }\n    }\n  }\n} // \u5904\u7406keydown\u4E8B\u4EF6\n\n\nfunction dispatch(event, element) {\n  var asterisk = _handlers['*'];\n  var key = event.keyCode || event.which || event.charCode; // \u8868\u5355\u63A7\u4EF6\u8FC7\u6EE4 \u9ED8\u8BA4\u8868\u5355\u63A7\u4EF6\u4E0D\u89E6\u53D1\u5FEB\u6377\u952E\n\n  if (!hotkeys.filter.call(this, event)) return; // Gecko(Firefox)\u7684command\u952E\u503C224\uFF0C\u5728Webkit(Chrome)\u4E2D\u4FDD\u6301\u4E00\u81F4\n  // Webkit\u5DE6\u53F3 command \u952E\u503C\u4E0D\u4E00\u6837\n\n  if (key === 93 || key === 224) key = 91;\n  /**\n   * Collect bound keys\n   * If an Input Method Editor is processing key input and the event is keydown, return 229.\n   * https://stackoverflow.com/questions/25043934/is-it-ok-to-ignore-keydown-events-with-keycode-229\n   * http://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n   */\n\n  if (_downKeys.indexOf(key) === -1 && key !== 229) _downKeys.push(key);\n  /**\n   * Jest test cases are required.\n   * ===============================\n   */\n\n  ['ctrlKey', 'altKey', 'shiftKey', 'metaKey'].forEach(function (keyName) {\n    var keyNum = modifierMap[keyName];\n\n    if (event[keyName] && _downKeys.indexOf(keyNum) === -1) {\n      _downKeys.push(keyNum);\n    } else if (!event[keyName] && _downKeys.indexOf(keyNum) > -1) {\n      _downKeys.splice(_downKeys.indexOf(keyNum), 1);\n    } else if (keyName === 'metaKey' && event[keyName] && _downKeys.length === 3) {\n      /**\n       * Fix if Command is pressed:\n       * ===============================\n       */\n      if (!(event.ctrlKey || event.shiftKey || event.altKey)) {\n        _downKeys = _downKeys.slice(_downKeys.indexOf(keyNum));\n      }\n    }\n  });\n  /**\n   * -------------------------------\n   */\n\n  if (key in _mods) {\n    _mods[key] = true; // \u5C06\u7279\u6B8A\u5B57\u7B26\u7684key\u6CE8\u518C\u5230 hotkeys \u4E0A\n\n    for (var k in _modifier) {\n      if (_modifier[k] === key) hotkeys[k] = true;\n    }\n\n    if (!asterisk) return;\n  } // \u5C06 modifierMap \u91CC\u9762\u7684\u4FEE\u9970\u952E\u7ED1\u5B9A\u5230 event \u4E2D\n\n\n  for (var e in _mods) {\n    if (Object.prototype.hasOwnProperty.call(_mods, e)) {\n      _mods[e] = event[modifierMap[e]];\n    }\n  }\n  /**\n   * https://github.com/jaywcjlove/hotkeys/pull/129\n   * This solves the issue in Firefox on Windows where hotkeys corresponding to special characters would not trigger.\n   * An example of this is ctrl+alt+m on a Swedish keyboard which is used to type \u03BC.\n   * Browser support: https://caniuse.com/#feat=keyboardevent-getmodifierstate\n   */\n\n\n  if (event.getModifierState && !(event.altKey && !event.ctrlKey) && event.getModifierState('AltGraph')) {\n    if (_downKeys.indexOf(17) === -1) {\n      _downKeys.push(17);\n    }\n\n    if (_downKeys.indexOf(18) === -1) {\n      _downKeys.push(18);\n    }\n\n    _mods[17] = true;\n    _mods[18] = true;\n  } // \u83B7\u53D6\u8303\u56F4 \u9ED8\u8BA4\u4E3A `all`\n\n\n  var scope = getScope(); // \u5BF9\u4EFB\u4F55\u5FEB\u6377\u952E\u90FD\u9700\u8981\u505A\u7684\u5904\u7406\n\n  if (asterisk) {\n    for (var i = 0; i < asterisk.length; i++) {\n      if (asterisk[i].scope === scope && (event.type === 'keydown' && asterisk[i].keydown || event.type === 'keyup' && asterisk[i].keyup)) {\n        eventHandler(event, asterisk[i], scope, element);\n      }\n    }\n  } // key \u4E0D\u5728 _handlers \u4E2D\u8FD4\u56DE\n\n\n  if (!(key in _handlers)) return;\n\n  for (var _i = 0; _i < _handlers[key].length; _i++) {\n    if (event.type === 'keydown' && _handlers[key][_i].keydown || event.type === 'keyup' && _handlers[key][_i].keyup) {\n      if (_handlers[key][_i].key) {\n        var record = _handlers[key][_i];\n        var splitKey = record.splitKey;\n        var keyShortcut = record.key.split(splitKey);\n        var _downKeysCurrent = []; // \u8BB0\u5F55\u5F53\u524D\u6309\u952E\u952E\u503C\n\n        for (var a = 0; a < keyShortcut.length; a++) {\n          _downKeysCurrent.push(code(keyShortcut[a]));\n        }\n\n        if (_downKeysCurrent.sort().join('') === _downKeys.sort().join('')) {\n          // \u627E\u5230\u5904\u7406\u5185\u5BB9\n          eventHandler(event, record, scope, element);\n        }\n      }\n    }\n  }\n} // \u5224\u65AD element \u662F\u5426\u5DF2\u7ECF\u7ED1\u5B9A\u4E8B\u4EF6\n\n\nfunction isElementBind(element) {\n  return elementHasBindEvent.indexOf(element) > -1;\n}\n\nfunction hotkeys(key, option, method) {\n  _downKeys = [];\n  var keys = getKeys(key); // \u9700\u8981\u5904\u7406\u7684\u5FEB\u6377\u952E\u5217\u8868\n\n  var mods = [];\n  var scope = 'all'; // scope\u9ED8\u8BA4\u4E3Aall\uFF0C\u6240\u6709\u8303\u56F4\u90FD\u6709\u6548\n\n  var element = document; // \u5FEB\u6377\u952E\u4E8B\u4EF6\u7ED1\u5B9A\u8282\u70B9\n\n  var i = 0;\n  var keyup = false;\n  var keydown = true;\n  var splitKey = '+';\n  var capture = false; // \u5BF9\u4E3A\u8BBE\u5B9A\u8303\u56F4\u7684\u5224\u65AD\n\n  if (method === undefined && typeof option === 'function') {\n    method = option;\n  }\n\n  if (Object.prototype.toString.call(option) === '[object Object]') {\n    if (option.scope) scope = option.scope; // eslint-disable-line\n\n    if (option.element) element = option.element; // eslint-disable-line\n\n    if (option.keyup) keyup = option.keyup; // eslint-disable-line\n\n    if (option.keydown !== undefined) keydown = option.keydown; // eslint-disable-line\n\n    if (option.capture !== undefined) capture = option.capture; // eslint-disable-line\n\n    if (typeof option.splitKey === 'string') splitKey = option.splitKey; // eslint-disable-line\n  }\n\n  if (typeof option === 'string') scope = option; // \u5BF9\u4E8E\u6BCF\u4E2A\u5FEB\u6377\u952E\u8FDB\u884C\u5904\u7406\n\n  for (; i < keys.length; i++) {\n    key = keys[i].split(splitKey); // \u6309\u952E\u5217\u8868\n\n    mods = []; // \u5982\u679C\u662F\u7EC4\u5408\u5FEB\u6377\u952E\u53D6\u5F97\u7EC4\u5408\u5FEB\u6377\u952E\n\n    if (key.length > 1) mods = getMods(_modifier, key); // \u5C06\u975E\u4FEE\u9970\u952E\u8F6C\u5316\u4E3A\u952E\u7801\n\n    key = key[key.length - 1];\n    key = key === '*' ? '*' : code(key); // *\u8868\u793A\u5339\u914D\u6240\u6709\u5FEB\u6377\u952E\n    // \u5224\u65ADkey\u662F\u5426\u5728_handlers\u4E2D\uFF0C\u4E0D\u5728\u5C31\u8D4B\u4E00\u4E2A\u7A7A\u6570\u7EC4\n\n    if (!(key in _handlers)) _handlers[key] = [];\n\n    _handlers[key].push({\n      keyup: keyup,\n      keydown: keydown,\n      scope: scope,\n      mods: mods,\n      shortcut: keys[i],\n      method: method,\n      key: keys[i],\n      splitKey: splitKey,\n      element: element\n    });\n  } // \u5728\u5168\u5C40document\u4E0A\u8BBE\u7F6E\u5FEB\u6377\u952E\n\n\n  if (typeof element !== 'undefined' && !isElementBind(element) && window) {\n    elementHasBindEvent.push(element);\n    addEvent(element, 'keydown', function (e) {\n      dispatch(e, element);\n    }, capture);\n\n    if (!winListendFocus) {\n      winListendFocus = true;\n      addEvent(window, 'focus', function () {\n        _downKeys = [];\n      }, capture);\n    }\n\n    addEvent(element, 'keyup', function (e) {\n      dispatch(e, element);\n      clearModifier(e);\n    }, capture);\n  }\n}\n\nfunction trigger(shortcut) {\n  var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'all';\n  Object.keys(_handlers).forEach(function (key) {\n    var dataList = _handlers[key].filter(function (item) {\n      return item.scope === scope && item.shortcut === shortcut;\n    });\n\n    dataList.forEach(function (data) {\n      if (data && data.method) {\n        data.method();\n      }\n    });\n  });\n}\n\nvar _api = {\n  getPressedKeyString: getPressedKeyString,\n  setScope: setScope,\n  getScope: getScope,\n  deleteScope: deleteScope,\n  getPressedKeyCodes: getPressedKeyCodes,\n  isPressed: isPressed,\n  filter: filter,\n  trigger: trigger,\n  unbind: unbind,\n  keyMap: _keyMap,\n  modifier: _modifier,\n  modifierMap: modifierMap\n};\n\nfor (var a in _api) {\n  if (Object.prototype.hasOwnProperty.call(_api, a)) {\n    hotkeys[a] = _api[a];\n  }\n}\n\nif (typeof window !== 'undefined') {\n  var _hotkeys = window.hotkeys;\n\n  hotkeys.noConflict = function (deep) {\n    if (deep && window.hotkeys === hotkeys) {\n      window.hotkeys = _hotkeys;\n    }\n\n    return hotkeys;\n  };\n\n  window.hotkeys = hotkeys;\n}\n\nexport { hotkeys as default };\n", "// @ts-check\n/**\n * import(\"../types/index.d.ts\")\n * import(\"../types/fzy.d.ts\")\n */\n\nimport {BaseElement} from './base-element.js';\nimport {html} from 'lit';\nimport {repeat} from 'lit/directives/repeat.js';\nimport {live} from 'lit/directives/live.js';\nimport {createRef, ref} from 'lit/directives/ref.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport _hotkeys from 'hotkeys-js';\n\nimport { NinjaHeader } from './ninja-header.js';\nimport { NinjaAction } from './ninja-action.js';\nimport {footerHtml} from './ninja-footer.js';\nimport {baseStyles, componentReset} from './base-styles.js';\n\nimport * as fzy from \"fzy.js\"\nimport { escapeStringRegexp } from '../internal/escape-string-regexp.js';\n\n/** @type {import(\"hotkeys-js\").Hotkeys} */\n// @ts-expect-error Gets proper types for hotkeys.\nconst hotkeys = _hotkeys\n\n\n/** @typedef {import(\"./ninja-header.js\").NinjaHeader} NinjaHeaderElement */\n/** @typedef {import(\"../types/index.d.ts\").INinjaAction} INinjaAction */\n\n/**\n * @type BaseElement\n */\nexport class NinjaKeys extends BaseElement {\n  /**\n   * @override\n   */\n  static baseName = 'ninja-keys';\n\n  /**\n   * @override\n   */\n  static get scopedElements() {\n    return {\n      'ninja-action': NinjaAction,\n      'ninja-header': NinjaHeader,\n    };\n  }\n\n  /**\n   * @override\n   */\n  static styles = [componentReset, baseStyles];\n\n  /**\n   * @override\n   */\n  static properties = {\n    placeholder: {type: String},\n    disableHotkeys: {type: Boolean},\n    searchType: {attribute: \"search-type\"},\n    searchLabel: {attribute: 'search-label'},\n    listboxLabel: {attribute: 'listbox-label'},\n    hideBreadcrumbs: {type: Boolean},\n    openHotkey: {},\n    navigationUpHotkey: {},\n    navigationDownHotkey: {},\n    closeHotkey: {},\n    goBackHotkey: {},\n    selectHotkey: {},\n    hotKeysJoinedView: {type: Boolean},\n    noAutoLoadMdIcons: {type: Boolean},\n    data: {\n      type: Array,\n      hasChanged() {\n        // Forced to trigger changed event always.\n        // Because of a lot of framework pattern wrap object with an Observer, like vue2.\n        // That's why object passed to web component always same and no render triggered. Issue #9\n        return true;\n      },\n    },\n    highlightMatches: {\n      type: Boolean, reflect: true, attribute: \"highlight-matches\"\n    },\n\n    // State\n    __selected__: {state: true},\n    visible: {state: true},\n    _bump: {state: true},\n    _actionMatches: {state: true},\n    _search: {state: true},\n    currentRoot: {state: true},\n    _flatData: {state: true},\n  };\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    /**\n     * @type {import(\"lit/directives/ref.js\").Ref<NinjaHeaderElement>}\n     */\n    this._headerRef = createRef();\n\n    /**\n     * Search placeholder text\n     * @type {string}\n     */\n    this.placeholder = 'Type a command or search...';\n\n    /**\n     * If true will register all hotkey for all actions\n     * @type {boolean}\n     */\n    this.disableHotkeys = false;\n\n    /**\n     * @type {\"regex\" | \"fuzzy\"}\n     */\n    this.searchType = \"regex\"\n\n    /**\n     * Whether or not to turn on match highlighting\n     * @type {boolean}\n     */\n    this.highlightMatches = false\n\n    /**\n     * Maps to `aria-labelledby` for search input\n     * @type {string}\n     */\n    this.searchLabel = 'Search for actions';\n\n    /**\n     * Maps to `aria-labelledby` for listbox\n     * @type {string}\n     */\n    this.listboxLabel = 'List of actions';\n\n    /**\n     * Show or hide breadcrumbs on header\n     * @type {boolean}\n     */\n    this.hideBreadcrumbs = false;\n\n    /**\n     * Open or hide shorcut\n     * @type {string}\n     */\n    this.openHotkey = 'cmd+k,ctrl+k';\n\n    /**\n     * Navigation Up hotkey\n     * @type {string}\n     */\n    this.navigationUpHotkey = 'up';\n\n    /**\n     * Navigation Down hotkey\n     * @type {string}\n     */\n    this.navigationDownHotkey = 'down';\n\n    /**\n     * Close hotkey\n     * @type {string}\n     */\n    this.closeHotkey = 'esc';\n\n    /**\n     * Go back on one level if has parent menu\n     * @type {string}\n     */\n    this.goBackHotkey = 'backspace';\n\n    /**\n     * Select action and execute handler or open submenu\n     * @type {string}\n     */\n    this.selectHotkey = 'enter'; // enter,space\n\n    /**\n     * Show or hide breadcrumbs on header\n     * @type {boolean}\n     */\n    this.hotKeysJoinedView = false;\n\n    /**\n     * Disable load material icons font on connect\n     * If you use custom icons.\n     * Set this attribute to prevent load default icons font\n     * @type {boolean}\n     */\n    this.noAutoLoadMdIcons = false;\n\n    /**\n     * Array of actions\n     * @type {Array<INinjaAction>}\n     */\n    this.data = [];\n\n    /**\n     * Private\n     */\n\n    /**\n     * @private\n     * @type {import('../types/index.js').Maybe<INinjaAction>}\n     */\n    this.__selected__ = null;\n\n    /**\n     * Show or hide element\n     * @type {boolean}\n     */\n    this.visible = false;\n\n    /**\n     * Temporarily used for animation effect. TODO: change to animate logic\n     * @private\n     * @type {boolean}\n     */\n    this._bump = true;\n\n    /**\n     * @private\n     * @type {Array<INinjaAction>}\n     */\n    this._actionMatches = [];\n\n    /**\n     * @type {string}\n     */\n    this._search = '';\n\n    /**\n     * @public\n     * @type {undefined | string}\n     */\n    this.currentRoot = undefined;\n\n    /**\n     * Array of actions in flat structure\n     * @type {Array<INinjaAction>}\n     */\n    this._flatData = [];\n  }\n\n  /**\n   * Public methods\n   */\n\n  /**\n   * Show a modal\n   * @param {{ parent?: string }} [options={}]\n   */\n  open(options = {}) {\n    this._bump = true;\n    this.visible = true;\n    const header = this._headerRef.value;\n\n    requestAnimationFrame(() => {\n      if (header) {\n        header.focusSearch();\n        header.expanded = true;\n        header.controls = 'actions-list';\n      }\n    })\n\n    if (this._actionMatches.length > 0) {\n      this._selected = this._actionMatches[0];\n\n      const header = this._headerRef.value;\n      if (header && this._selected && this._selected.id) {\n        header.activeDescendant = this._selected.id;\n      }\n    }\n    this.setParent(options.parent);\n  }\n\n  /**\n   * Close modal\n   */\n  close() {\n    this._bump = false;\n    this.visible = false;\n\n    const header = this._headerRef.value;\n    if (header) {\n      header.expanded = false;\n    }\n  }\n\n  /**\n   * Navigate to group of actions\n   * @param {string} [parent] - parent id of parent group/action\n   */\n  setParent(parent) {\n    if (!parent) {\n      this.currentRoot = undefined;\n    } else {\n      this.currentRoot = parent;\n    }\n    this._selected = undefined;\n    this._search = '';\n    this._headerRef.value?.setSearch('');\n  }\n\n  /**\n   * @private\n   */\n  getBreadcrumbs() {\n    const path = [];\n    let parentAction = this._selected?.parent;\n    if (parentAction) {\n      path.push(parentAction);\n      while (parentAction) {\n        const action = this._flatData.find((a) => a.id === parentAction);\n        if (action?.parent) {\n          path.push(action.parent);\n        }\n        parentAction = action ? action.parent : undefined;\n      }\n    }\n    return path.reverse();\n  }\n\n  /**\n   * @returns {import('../types/index.js').Maybe<INinjaAction>}\n   */\n  get _selected() {\n    return this.__selected__;\n  }\n\n  /**\n   * @param {import('../types/index.js').Maybe<INinjaAction>} action\n   */\n  set _selected(action) {\n    const header = this._headerRef.value;\n    if (header && action && action.id) {\n      header.activeDescendant = action.id;\n    }\n    const prevSelection = this.__selected__;\n    this.__selected__ = action;\n    this.requestUpdate('_selected', prevSelection);\n  }\n\n  /**\n   * @override\n   */\n  connectedCallback() {\n    super.connectedCallback();\n\n    if (!this.noAutoLoadMdIcons) {\n      document.fonts.load('24px Material Icons', 'apps').then(() => {});\n    }\n\n    this._registerInternalHotkeys();\n  }\n\n  /**\n   * @override\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._unregisterInternalHotkeys();\n  }\n\n  /**\n   * @private\n   * @param {INinjaAction[]} members\n   * @param {string} [parent]\n   * @returns {INinjaAction[]}\n   */\n  _flattern(members, parent) {\n    /** @type any[] */\n    let children = [];\n\n    if (!members) {\n      members = [];\n    }\n    return members\n      .map((mem) => {\n        const alreadyFlatternByUser =\n          mem.children &&\n          mem.children.some((value) => {\n            return typeof value == 'string';\n          });\n        const m = {...mem, parent: mem.parent || parent};\n        if (alreadyFlatternByUser) {\n          return m;\n        } else {\n          if (m.children && m.children.length) {\n            parent = mem.id;\n            children = [...children, ...m.children];\n          }\n\n          // @ts-expect-error ...weird.\n          m.children = m.children ? m.children.map((c) => c.id) : [];\n          return m;\n        }\n      })\n      .concat(children.length ? this._flattern(children, parent) : children);\n  }\n\n  /**\n   * @override\n   * @param {import(\"lit\").PropertyValues<this>} changedProperties\n   */\n  update(changedProperties) {\n    if (changedProperties.has('data') && !this.disableHotkeys) {\n      this._flatData = this._flattern(this.data);\n\n      this._flatData\n        .forEach((action) => {\n          if (!action.hotkey) return\n\n          hotkeys(action.hotkey, (event) => {\n            event.preventDefault();\n            if (action.handler) {\n              action.handler(action, event);\n            }\n          });\n        });\n    }\n    super.update(changedProperties);\n  }\n\n  /**\n   * @param {Event} event\n   * @return {Boolean}\n   */\n  shouldNotOpen (event) {\n    /**\n      * @type {Element[]}\n      */\n    // @ts-expect-error EventTarget sucks.\n    const composedPath = event.composedPath()\n\n    const disallowedTags = ['input', 'textarea']\n\n    return composedPath.some((el) => {\n      if (el?.getAttribute?.(\"contenteditable\") === \"true\") {\n        return true\n      }\n\n      return disallowedTags.includes(el?.tagName?.toLowerCase())\n    })\n  }\n\n\n  /**\n   * @private\n   */\n  _registerInternalHotkeys() {\n    if (this.openHotkey) {\n      hotkeys(this.openHotkey, (event) => {\n        if (this.shouldNotOpen(event)) {\n          return\n        }\n\n        event.preventDefault();\n        this.visible ? this.close() : this.open();\n      });\n    }\n\n    if (this.selectHotkey) {\n      hotkeys(this.selectHotkey, (event) => {\n        if (!this.visible) {\n          return;\n        }\n        event.preventDefault();\n        this._actionSelected(this._actionMatches[this._selectedIndex], event);\n      });\n    }\n\n    if (this.goBackHotkey) {\n      hotkeys(this.goBackHotkey, (event) => {\n        if (!this.visible) {\n          return;\n        }\n\n        if (!this._search) {\n          event.preventDefault();\n          this._goBack();\n        }\n      });\n    }\n\n    if (this.navigationDownHotkey) {\n      hotkeys(this.navigationDownHotkey, (event) => {\n        if (!this.visible) {\n          return;\n        }\n        event.preventDefault();\n        if (this._selectedIndex >= this._actionMatches.length - 1) {\n          this._selected = this._actionMatches[0];\n        } else {\n          this._selected = this._actionMatches[this._selectedIndex + 1];\n        }\n      });\n    }\n\n\n    if (this.navigationUpHotkey) {\n      hotkeys(this.navigationUpHotkey, (event) => {\n        if (!this.visible) {\n          return;\n        }\n        event.preventDefault();\n        if (this._selectedIndex === 0) {\n          this._selected = this._actionMatches[this._actionMatches.length - 1];\n        } else {\n          this._selected = this._actionMatches[this._selectedIndex - 1];\n        }\n      });\n    }\n\n    if (this.closeHotkey) {\n      hotkeys(this.closeHotkey, (e) => {\n        if (!this.visible) {\n          return;\n        }\n\n        e.preventDefault();\n        this.visible = false\n        this.close();\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  _unregisterInternalHotkeys() {\n    if (this.openHotkey) {\n      hotkeys.unbind(this.openHotkey);\n    }\n\n    if (this.selectHotkey) {\n      hotkeys.unbind(this.selectHotkey);\n    }\n\n    if (this.goBackHotkey) {\n      hotkeys.unbind(this.goBackHotkey);\n    }\n\n    if (this.navigationDownHotkey) {\n      hotkeys.unbind(this.navigationDownHotkey);\n    }\n\n    if (this.navigationUpHotkey) {\n      hotkeys.unbind(this.navigationUpHotkey);\n    }\n\n    if (this.closeHotkey) {\n      hotkeys.unbind(this.closeHotkey);\n    }\n  }\n\n  /**\n   * @private\n   * @param {INinjaAction} index\n   * @param {MouseEvent} $event\n   */\n  _actionFocused(index, $event) {\n    // this.selectedIndex = index;\n    this._selected = index;\n\n    /** @type {import(\"./index.js\").NinjaAction} */\n    // @ts-expect-error we know its a ninja action.\n    const target = $event.target;\n    target.ensureInView();\n  }\n\n  /** @private */\n  _onTransitionEnd() {\n    this._bump = false;\n  }\n\n  /**\n   * @deprecated\n   * This is a convenience function to align with the previous API.\n   * Don't use this to pass to templates because I've found it create inconsistent behavior.\n   * Use `this.getBreadcrumbs()` instead.\n   */\n  get breadcrumbs () {\n    return this.getBreadcrumbs()\n  }\n\n  /**\n   * @private\n   */\n  _goBack() {\n    const breadcrumbs = this.getBreadcrumbs()\n    if (breadcrumbs) {\n      const parent =\n        breadcrumbs.length > 1\n          ? breadcrumbs[breadcrumbs.length - 2]\n          : undefined;\n      this.setParent(parent);\n      return\n    }\n  }\n\n  /**\n   * @returns {NinjaAction | null | undefined}\n   */\n  findActionElement (index = this._selectedIndex) {\n    const id = this._actionMatches[index]?.id\n\n    if (id == null) return null\n\n    const query = \"#ninja-action__\" + id\n\n    return this.shadowRoot?.querySelector(query)\n  }\n\n  /**\n   * @public\n   * Escapes invalid string sequences when calling `new RegExp(string)`. This is used for `findMatches`.\n   * @see {@link https://github.com/ssleptsov/ninja-keys/pull/33}\n   * @param {string} str\n   */\n  stringToRegExp (str) {\n    return escapeStringRegexp(str)\n  }\n\n  /**\n   * Iterates over flatData to find a match. Override this if you want to implement your own matcher.\n   * If you're using search from a different place and adding / removing results, just return\n   * the flatData.\n   * @param {Array<INinjaAction>} flatData\n   */\n  findMatches (flatData) {\n    return flatData.filter((action) => {\n      if (this._search.trim() === \"\") {\n        return action.parent === this.currentRoot && true;\n      }\n\n      const { title, keywords, content } = action\n\n      let matcher = false\n\n      if (this.searchType === \"regex\") {\n        // https://stackoverflow.com/questions/31814535/getting-error-invalid-regular-expression\n        const regex = this.stringToRegExp(this._search);\n\n        matcher = Boolean(\n          (title && title.match(regex))\n          || (keywords && keywords.match(regex))\n          || (content && content.match(regex))\n        )\n      }\n\n      if (this.searchType === \"fuzzy\") {\n        const search = this._search\n\n        matcher = Boolean(\n          (title && hasMatch(search, title))\n          || (keywords && hasMatch(search, keywords))\n          || (content && hasMatch(search, content))\n        )\n      }\n\n      if (!this.currentRoot && this._search) {\n        // global search for items on root\n        return matcher;\n      }\n\n      return action.parent === this.currentRoot && matcher;\n    });\n  }\n\n  /**\n   * @override\n   */\n  render() {\n    const classes = {\n      bump: this._bump,\n      'modal-content': true,\n    };\n\n    const menuClasses = {\n      visible: this.visible,\n      modal: true,\n    };\n\n    let sections\n    let actionMatches = this._flatData\n\n    actionMatches = this.findMatches(actionMatches)\n\n    sections = actionMatches.reduce(\n      (entryMap, e) =>\n        entryMap.set(e.section, [...(entryMap.get(e.section) || []), e]),\n      new Map()\n    );\n\n    this._actionMatches = [...sections.values()].flat();\n\n    if (this._actionMatches.length > 0 && this._selectedIndex === -1) {\n      this._selected = this._actionMatches[0];\n    }\n    if (this._actionMatches.length === 0) {\n      this._selected = undefined;\n    }\n\n    /**\n     * @param {INinjaAction[]} actions\n     */\n    const actionsList = (actions) =>\n      html` ${repeat(\n        actions,\n        (action) => action.id,\n        (action) =>\n          html`<ninja-action\n            id=${\"ninja-action__\" + action.id}\n            role=\"option\"\n            exportparts=\"ninja-action, ninja-selected,ninja-icon, ninja-hotkeys, ninja-hotkey, ninja-action__header, ninja-action__title, ninja-action__content\"\n            aria-selected=${live(action.id === this._selected?.id)}\n            .searchQuery=${this._search}\n            .selected=${live(action.id === this._selected?.id)}\n            .hotKeysJoinedView=${this.hotKeysJoinedView}\n            .searchType=${this.searchType}\n            .highlightMatches=${this.highlightMatches}\n            tabindex=\"-1\"\n            @mousemove=${(/** @type {MouseEvent} */ event) => {\n              this._actionFocused(action, event);\n            }}\n            @actionsSelected=${(\n              /** @type {CustomEvent<INinjaAction>}*/ event\n            ) => this._actionSelected(event.detail, event)}\n            .action=${action}\n          ></ninja-action>`\n      )}`;\n\n    /**\n     * @type {import(\"lit\").TemplateResult[]}\n     */\n    const itemTemplates = [];\n    sections.forEach((actions, section) => {\n      const header = section\n        ? html`<div class=\"group-header\">${section}</div>`\n        : undefined;\n      itemTemplates.push(html`${header}${actionsList(actions)}`);\n    });\n\n    return html`\n      <div part=\"modal-overlay\" @click=${this._overlayClick} class=${classMap(menuClasses)}>\n        <div part=\"modal-content\" class=${classMap(classes)} @animationend=${this._onTransitionEnd}>\n          <ninja-header\n            part=\"modal-header\"\n            exportparts=\"ninja-input,ninja-input-wrapper\"\n            ${ref(this._headerRef)}\n            .placeholder=${this.placeholder}\n            .hideBreadcrumbs=${this.hideBreadcrumbs}\n            .breadcrumbs=${this.getBreadcrumbs()}\n            searchLabel=${this.searchLabel}\n            @change=${this._handleInput}\n            @setParent=${(/** @type {CustomEvent<INinjaAction>} */ event) =>\n              this.setParent(event.detail.parent)}\n            @close=${this.close}\n          >\n          </ninja-header>\n          <div part=\"modal-body\" class=\"modal-body\">\n            <div\n              id=\"actions-list\"\n              class=\"actions-list\"\n              role=\"listbox\"\n              part=\"actions-list\"\n              aria-labelledby=\"listbox-label\"\n            >\n              ${itemTemplates}\n            </div>\n\n            <label id=\"listbox-label\" class=\"visually-hidden\">\n              <slot>\n                <span>${this.listboxLabel}</span>\n              </slot>\n            </label>\n            <slot name=\"footer\"> ${footerHtml} </slot>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * @private\n   * @returns {number}\n   */\n  get _selectedIndex() {\n    if (!this._selected) {\n      return -1;\n    }\n    return this._actionMatches.indexOf(this._selected);\n  }\n\n  /**\n   * @private\n   * @param {INinjaAction} [action]\n   * @param {KeyboardEvent | CustomEvent<INinjaAction>} [event]\n   */\n  _actionSelected(action, event) {\n    // fire selected event even when action is empty/not selected,\n    // so possible handle api search for example\n    this.dispatchEvent(\n      new CustomEvent('selected', {\n        detail: {search: this._search, action},\n        bubbles: true,\n        composed: true,\n      })\n    );\n\n    if (!action) {\n      return;\n    }\n\n    if (action.children && action.children?.length > 0) {\n      this.currentRoot = action.id;\n      this._search = '';\n    }\n\n    this._headerRef.value?.setSearch('');\n    this._headerRef.value?.focusSearch();\n\n    if (action.handler) {\n      const result = action.handler(action, event);\n      if (!result?.keepOpen) {\n        this.close();\n      }\n    } else {\n      // Default behavior for links\n      this.findActionElement(this._selectedIndex)?.forceClick()\n    }\n    this._bump = true;\n  }\n\n  /**\n   * @private\n   * @param {CustomEvent<{search: string}>} event\n   */\n  async _handleInput(event) {\n    this._search = event.detail.search;\n    await this.updateComplete;\n    this.dispatchEvent(\n      new CustomEvent('change', {\n        detail: {search: this._search, actions: this._actionMatches},\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {Event} event\n   */\n  _overlayClick(event) {\n    const target = event.target;\n\n    if (target instanceof Element) {\n      if (target?.classList.contains('modal')) {\n        this.close();\n      }\n    }\n  }\n}\n\n/**\n * @param {string} query\n * @param {string} str\n * @returns {boolean}\n */\nfunction hasMatch (query, str) {\n  return [query, ...query.split(/\\s+/)].some((q) => fzy.hasMatch(q, str))\n}\n"],
  "mappings": "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",
  "names": ["generateMap", "list", "start", "end", "map", "Map", "i", "set", "repeat", "directive", "Directive", "constructor", "partInfo", "super", "type", "PartType", "CHILD", "Error", "_getValuesAndKeys", "items", "keyFnOrTemplate", "template", "keyFn", "keys", "values", "index", "item", "render", "this", "update", "containerPart", "oldParts", "getCommittedValue", "newValues", "newKeys", "Array", "isArray", "_itemKeys", "oldKeys", "_a", "newParts", "newKeyToIndexMap", "oldKeyToIndexMap", "oldHead", "oldTail", "length", "newHead", "newTail", "setChildPartValue", "insertPart", "has", "oldIndex", "get", "oldPart", "newPart", "removePart", "setCommittedValue", "noChange", "live", "directive", "Directive", "constructor", "partInfo", "super", "type", "PartType", "PROPERTY", "ATTRIBUTE", "BOOLEAN_ATTRIBUTE", "Error", "isSingleExpression", "render", "value", "update", "part", "noChange", "nothing", "element", "name", "hasAttribute", "getAttribute", "String", "setCommittedValue", "isff", "addEvent", "object", "event", "method", "useCapture", "getMods", "modifier", "key", "mods", "i", "getKeys", "keys", "index", "compareArray", "a1", "a2", "arr1", "arr2", "isIndex", "_keyMap", "_modifier", "modifierMap", "_mods", "_handlers", "k", "_downKeys", "winListendFocus", "_scope", "elementHasBindEvent", "code", "x", "getKey", "getModifier", "setScope", "scope", "getScope", "getPressedKeyCodes", "getPressedKeyString", "c", "filter", "target", "tagName", "flag", "isPressed", "keyCode", "deleteScope", "newScope", "handlers", "clearModifier", "hotkeys", "unbind", "keysInfo", "info", "eachUnbind", "_len", "args", "_key", "_ref", "_ref$splitKey", "splitKey", "multipleKeys", "originKey", "unbindKeys", "len", "lastKey", "record", "isMatchingMethod", "eventHandler", "handler", "element", "modifiersMatch", "y", "dispatch", "asterisk", "keyName", "keyNum", "e", "_i", "keyShortcut", "_downKeysCurrent", "a", "isElementBind", "option", "keyup", "keydown", "capture", "trigger", "shortcut", "dataList", "item", "data", "_api", "_hotkeys", "deep", "hotkeys", "NinjaKeys", "BaseElement", "NinjaAction", "NinjaHeader", "e", "options", "header", "parent", "path", "parentAction", "action", "a", "prevSelection", "members", "children", "mem", "alreadyFlatternByUser", "value", "m", "c", "changedProperties", "event", "composedPath", "disallowedTags", "el", "index", "$event", "breadcrumbs", "id", "query", "str", "escapeStringRegexp", "flatData", "title", "keywords", "content", "matcher", "regex", "search", "hasMatch", "classes", "menuClasses", "sections", "actionMatches", "entryMap", "actionsList", "actions", "x", "l", "itemTemplates", "section", "o", "n", "footerHtml", "target", "__publicField", "componentReset", "baseStyles", "q"]
}
